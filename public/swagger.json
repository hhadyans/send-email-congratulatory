{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"location": {
				"properties": {
					"country": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"timeOffset": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"country",
					"state",
					"city",
					"address",
					"timeOffset"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserData": {
				"properties": {
					"id": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"birthdayAt": {
						"type": "number",
						"format": "double"
					},
					"location": {
						"$ref": "#/components/schemas/location"
					},
					"createdAt": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"firstName",
					"lastName",
					"birthdayAt",
					"location",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_UserData.Exclude_keyofUserData.id-or-createdAt-or-updatedAt-or-birthdayAt__": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"location": {
						"$ref": "#/components/schemas/location"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"location"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_UserData.id-or-createdAt-or-updatedAt-or-birthdayAt_": {
				"$ref": "#/components/schemas/Pick_UserData.Exclude_keyofUserData.id-or-createdAt-or-updatedAt-or-birthdayAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserPayload": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_UserData.id-or-createdAt-or-updatedAt-or-birthdayAt_"
					},
					{
						"properties": {
							"birthdayDate": {
								"type": "string",
								"format": "date-time"
							}
						},
						"required": [
							"birthdayDate"
						],
						"type": "object"
					}
				]
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "send-email-congratulatory",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/User": {
			"post": {
				"operationId": "Store",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/UserData"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPayload"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}